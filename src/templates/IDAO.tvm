package ${package};

import java.io.Serializable;

import ${class.AbsoluteValueObjectClassName};
#if ($class.ParentRoot.Id)
import ${class.ParentRoot.Id.Property.AbsoluteClassName};
#end

${snippet.DAOInterfaceImports}

/**
 * dao(interface)
 * build by HST(hibernate synchronizer tools by ydd)
 * @time ${class.Time}
 * 
 * #	<bean id="${class.DaoName}" class="${class.AbsoluteDAOImplementName}"/>
 */
public interface ${class.DAOInterfaceName} extends Serializable {

#if ($class.ParentRoot.Id)
	/**
	 * find bean by id
	 * @param id
	 * @return ${class.ValueObjectClassName}
	 */
	public ${class.ValueObjectClassName} findById( ${class.ParentRoot.Id.Property.ClassName} id );
	
	/**
	 * delete bean by id
	 * @param id
	 * @return ${class.ValueObjectClassName}
	 */
	public ${class.ValueObjectClassName} deleteById( ${class.ParentRoot.Id.Property.ClassName} id );
#end
	
	/**
	 * delete bean by bean
	 * @param bean
	 * @return ${class.ValueObjectClassName}
	 */
	public ${class.ValueObjectClassName} delete( ${class.ValueObjectClassName} bean );
	
	/**
	 * save bean by bean
	 * @param bean
	 * @return ${class.ValueObjectClassName}
	 */
	public ${class.ValueObjectClassName} save( ${class.ValueObjectClassName} bean );
	
	/**
	 * update bean by bean
	 * @param bean
	 * @return ${class.ValueObjectClassName}
	 */
	public ${class.ValueObjectClassName} update( ${class.ValueObjectClassName} bean );
	
	/**
	 * save or update bean by bean
	 * @param bean
	 * @return ${class.ValueObjectClassName}
	 */
	public ${class.ValueObjectClassName} saveOrUpdate( ${class.ValueObjectClassName} bean );

${snippet.DAOCustomInterfaceContents}
}